// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"context"
)

type Querier interface {
	CreateSession(ctx context.Context, arg CreateSessionParams) error
	// user/query.sql
	// ------------------------------------------------------------
	// Users basic queries for sqlc (SQLite engine)
	// Schema: id INTEGER PK, email TEXT UNIQUE, password_hash TEXT, created_at DATETIME
	// ------------------------------------------------------------
	// Create a new user and return the generated row --------------------------------
	CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error)
	DeleteSessionByRefreshToken(ctx context.Context, refreshToken string) error
	DeleteSessionByToken(ctx context.Context, token string) error
	// Delete a user -----------------------------------------------------------------
	DeleteUser(ctx context.Context, id int64) error
	// Get user role -----------------------------------------------------------------
	GetRole(ctx context.Context, id int64) (string, error)
	GetSessionByRefreshToken(ctx context.Context, refreshToken string) (Session, error)
	// Fetch a user by unique email ---------------------------------------------------
	GetUserByEmail(ctx context.Context, email string) (GetUserByEmailRow, error)
	// Fetch a user by primary key ----------------------------------------------------
	GetUserByID(ctx context.Context, id int64) (User, error)
	IsValidSession(ctx context.Context, arg IsValidSessionParams) (int64, error)
	// List active users (simple pagination) -----------------------------------------
	ListUsers(ctx context.Context, arg ListUsersParams) ([]ListUsersRow, error)
	// Update only the password hash --------------------------------------------------
	UpdatePasswordHash(ctx context.Context, arg UpdatePasswordHashParams) error
}

var _ Querier = (*Queries)(nil)
